
@{
    Layout = null;
}
@using WebApplication3.ViewModels;
@model FileResultListVM
<!DOCTYPE html>

<style>
    body{
        font-size: 15px;
    }

    ::-webkit-input-placeholder {
        font-style: italic;
    }

    /*Header*/
    .header {
        background: #1abc9c;
        color: white;
        border-radius: 4px;
        margin-top: 5px;
        margin-bottom: 5px;
        font-size: 1.2em;
    }


    Stripped table
    #tableResults {
        border-collapse: collapse;
        border-spacing: 0;
        width: 100%;
        border: 1px solid #ddd;
        position: relative;
    }

    #tableResults th, td {
        text-align: right;
        padding: 10px;
    }

    #tableResults th {
        position: sticky;
        top: 0;
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.5);
        background-color: navy;
        font-size: 1em;
        color: white;
    }


    /*back to top button*/
    #topBtn {
        display: none;
        font-size: 24px;
        position: fixed;
        bottom: 20px;
        right: 30px;
        z-index: 99;
        font-size: 12px;
        cursor: pointer;
        border-radius: 4px;
        transition: all 0.5s;
        border-color: navy;
        color: black;
        padding: 10px 20px 10px 20px;
    }
    #topBtn:hover{
        background-color: lightblue;
    }

    .scrollit {
        overflow: auto;
        min-height: 200px;
        max-height: 450px;
    }

    .putMiddle{
        position: static;
        text-align : center;
    }

    .itemDirectory:hover{
        color: blue;
        text-decoration: underline;
        cursor: pointer;
    }



</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PrintResult</title>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <link href="~/Library/font-awesome-4.4.0/css/font-awesome.css" rel="stylesheet" />
    <link href="~/Library/font-awesome-4.4.0/css/font-awesome.min.css" rel="stylesheet" />

    <link href="~/Library/bootstrap-4.5.0-dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Library/bootstrap-rtl-3.3.4/dist/css/bootstrap-rtl.min.css" rel="stylesheet" />

    <script>
        $(function () {
            $(document).ready(function () {
                if (@Model.Result.Count != 0 || @Model.TableResultDate.Count != 0 || @Model.TableResultDuplicate.Count != 0 || @Model.TableResultName.Count != 0) {
                    $("#resultBody").show();
                } else {
                    $("#NotFoundResult").show();

                }

                if (@Model.Quantity.Count == 0) {
                    $("#NotFoundSummary").show()
                } else {
                    $("#tableSummary").show();

                }

            })
        })
    </script>

    <script>
        var btn = document.getElementById("topBtn");
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 150 || document.documentElement.scrollTop > 150) {
                $("#topBtn").show();
            } else {
                $("#topBtn").hide();
            }
        }

        function topFunct() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
    </script>

    <script>
        $(function () {
            $(document).ready(function () {
                var sum = @Model.TableResultDate.Count + @Model.TableResultDuplicate.Count + @Model.TableResultName.Count;
                $("#NumFiles").append(sum);

            });
        });


    </script>

    <script>
        function searchFunction() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("tableResults");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    </script>

    <script>
        function changeByteSize(num) {
            var value = parseInt(num);
            var size = parseInt(document.getElementById('byteSize').value);
            var result = (value / size);
            $("#demo").text(result)            
        }
    </script>


    <script>
        $(function () {
            $(document).ready(function () {
                $("#tableResults .itemDirectory").click(function () {
                    
                    var getPath = $(this).text();
                    var cmdCommend = "\\start, ".concat(getPath);                    
                    $.ajax({
                        type: 'GET',
                        url: "/FindFile/OpenWindowsBrowser",
                        data: {
                            clickedDirectory: cmdCommend
                        }
                    })
                })                
            })
        })
    </script>
</head>


<body>
    <div class="container-fluid">
        <div class="header">
            <div class="row">
                <div class="col-lg-12">
                    <h2 style="text-align: center; font-style:italic; margin: 5px">@Model.Explanation</h2>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-lg-6" style="text-align: right">
                    <div style="display: inline">
                        @if (Model.Selected == "CreationDate")
                        {
                            <p class="badge badge-secondary m-2">תאריך נבחר:</p>@Model.DateResult<br />
                        }
                    </div>

                    <div style="display: inline">
                        <p class="badge badge-secondary m-2" style="margin: 5px">
                            מספר הקבצים:
                        </p><p class="badge badge-pill badge-primary" style="margin: 5px" id="NumFiles"></p><br />
                    </div>
                </div>
                <div class="col-lg-6" >
                    <form action="/FindFile/GoBack" method="post">
                        <button type="submit" class="btn m-2" style="float: left; background-color: navy; color: white">שנה את סוג החיפוש</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

  
    <div class="container-fluid">
        <div class="row mb-md-2" style="text-align:right">
            <div class="col-lg-7">
                <div class="card h-100">
                    <div class="card-header">
                        <h6 class="m-0 font-weight-bold text-success">קבצים כפולים</h6>
                    </div>
                    <div class="card-body">


                        <div class="putMiddle" id="NotFoundSummary" style="display:none">
                            <h4>בתוצאה אין קבצים כפולים.</h4>
                        </div>

                         <div class="col-lg-12">
                                <div class="">
                                    <div class="table-responsive">
                                        <table class="table table-hover" id="tableSummary" border="0" style="display:none">
                                            <tr>
                                                <th>שם קובץ</th>
                                                <th>כמות</th>
                                                <th>גודל כולל</th>
                                            </tr>

                                            @{
                                                int sum = 0;
                                             

                                                if (Model.Selected == "Duplicate")
                                                {
                                                    foreach (KeyValuePair<string, int> item in Model.Quantity)
                                                    {
                                                        //var val = Model.Result.FirstOrDefault(x => x.Key.ToString() == item.Key).Key;
                                                        var val = Model.TableResultDuplicate.FirstOrDefault(x => x.Name + x.Extension == item.Key);

                                                        <tr >
                                                            <td >@val.Name@val.Extension</td>
                                                            <td >@item.Value</td>
                                                            <td >@(val.Size * item.Value)</td>
                                                        </tr>
                                                        sum = sum + Convert.ToInt32(val.Size * item.Value);
                                                        
                                                    };
                                                }
                                                else if (Model.Selected == "IllegalName")
                                                {
                                                    foreach (KeyValuePair<string, int> item in Model.Quantity)
                                                    {
                                                        var val = Model.TableResultName.FirstOrDefault(x => x.Name + x.Extension == item.Key);

                                                        <tr >
                                                            <td >@val.Name@val.Extension</td>
                                                            <td >@item.Value</td>
                                                            <td >@(val.Size * item.Value)</td>
                                                        </tr>
                                                        sum = sum + Convert.ToInt32(val.Size * item.Value);
                                                      
                                                    };
                                                }
                                                else
                                                {
                                                    foreach (KeyValuePair<string, int> item in Model.Quantity)
                                                    {
                                                        var val = Model.TableResultDate.FirstOrDefault(x => x.Name + x.Extension == item.Key);

                                                        <tr>
                                                            <td >@val.Name@val.Extension</td>
                                                            <td >@item.Value</td>
                                                            <td >@(val.Size * item.Value)</td>
                                                        </tr>
                                                        sum = sum + Convert.ToInt32(val.Size * item.Value);

                                                    };
                                                };


                                            }

                                            <tr >
                                                <td ><b>סכום:</b></td>
                                                <td></td>
                                                <td >
                                                    <b id="demo">@sum</b>
                                                    <select class="form-control-sm" id="byteSize" style="float: left" onchange="changeByteSize(@sum)">
                                                        <option value="1">Bytes</option>
                                                        <option value="1000">KB Kilobytes</option>
                                                        <option value="1000000">MB Megabytes</option>
                                                        <option value="1000000000">GB Gigabytes</option>
                                                    </select>

                                                </td>
                                            </tr>
                                        </table>

                                    </div>

                                </div>
                            </div>
                       
                    </div>
                </div>
            </div>

            <div class="col-lg-5">
                <div class="card h-100">
                    <div class="card-header">
                        <h6 class="m-0 font-weight-bold text-success">מידע נוסף</h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-hover" id="tableDetails" border="0">
                                        <tr>
                                            <th>הקובץ החוזר ביותר</th>
                                            <th>כמות</th>

                                        </tr>
                                        <tr>
                                            <td>@Model.FileMaxName</td>
                                            <td>@Model.FileMaxNumber</td>

                                        </tr>
                                    </table>

                                    <table class="table table-hover" border="0">
                                        <tr>
                                            <th>סיומת החוזר ביותר</th>
                                            <th>כמות</th>

                                        </tr>
                                        <tr>
                                            <td>@Model.ExtensionMaxName</td>
                                            <td>@Model.ExtensionMaxNumber</td>

                                        </tr>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row" style="text-align:right">
            <div class="col-lg-12">
                <div class="card mb-md-2">
                    <div class="card-header">
                        <h6 class="m-0 font-weight-bold text-primary">תוצאות</h6>
                    </div>
                    <div class="card-body">

                        <div class="putMiddle" id="NotFoundResult" style="display: none; font-style:italic" >
                            <h4>לא נמצאו קבצים ... אין קבצים שמפרים את כללי שמות הקבצים.</h4>
                        </div>

                        <div class="container-fluid" id="resultBody" style="display:none">
                            <div class="table">

                                <div class="row">
                                    <div class="col-sm-4" id="searchBarTable">
                                        <input type="search" class="form-control mb-2" id="searchInput" placeholder="חפש לפי שם" onkeyup="searchFunction()" />
                                    </div>
                                </div>

                                <div id="tableResults" >
                                    <table class="table table-hover" cellpadding="20" border="1">
                                        <thead>
                                            <tr>
                                                <th>תיקיה</th>
                                                <th>שם</th>
                                                <th>סיומת</th>
                                                <th>תאריך היווצרות</th>
                                                <th>משתמש ID</th>
                                                <th>גודל (bytes)</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @if (Model.Selected == "Duplicate")
                                            {
                                                foreach (var item in Model.TableResultDuplicate.OrderBy(a => a.Name))
                                                {
                                                    <tr>
                                                        <td class="itemDirectory">@item.Directory</td>
                                                        <td>@item.Name</td>
                                                        <td>@item.Extension</td>
                                                        <td>@item.CreationDate</td>
                                                        <td>@item.UserID</td>
                                                        <td>@item.Size</td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model.Selected == "IllegalName")
                                            {
                                                foreach (var item in Model.TableResultName.OrderBy(a => a.Name))
                                                {
                                                 
                                                    <tr>
                                                        <td class="itemDirectory" >@item.Directory</td>
                                                        <td>@item.Name</td>
                                                        <td>@item.Extension</td>
                                                        <td>@item.CreationDate</td>
                                                        <td>@item.UserID</td>
                                                        <td>@item.Size</td>
                                                    </tr>
                                                };

                                            }
                                            else
                                            {
                                                foreach (var item in Model.TableResultDate.OrderBy(a => a.Name))
                                                {
                                                    <tr>
                                                        <td class="itemDirectory">@item.Directory</td>
                                                        <td>@item.Name</td>
                                                        <td>@item.Extension</td>
                                                        <td>@item.CreationDate</td>
                                                        <td>@item.UserID</td>
                                                        <td>@item.Size</td>
                                                    </tr>
                                                };
                                            }
                                        </tbody>


                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>



    <button onclick="topFunct()" id="topBtn"><i class="fa fa-angle-double-up"></i></button>
</body>
</html>
